{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPwc/yLWhkyJqU/dc+P1Oam",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/s-bhanu/data-structures-1/blob/main/day1_student_score_predictor\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 579
        },
        "id": "0KMh9LMlw1Z4",
        "outputId": "93193184-3de6-4bc7-c7ae-80dfd2170616"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Actual: [np.int64(78), np.int64(25)]\n",
            "Predicted: [np.float64(76.78571428571428), np.float64(27.500000000000014)]\n",
            "If a student studies 5 hours, the predicted score is: 52.14\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.12/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "# Importing libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "# Step 1: Create a small dataset (Hours studied vs. Score)\n",
        "data = {\n",
        "    'Hours': [1, 2, 3, 4, 5, 6, 7, 8, 9],\n",
        "    'Scores': [20, 25, 35, 45, 50, 60, 70, 78, 85]\n",
        "}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Step 2: Visualize the data\n",
        "plt.scatter(df['Hours'], df['Scores'], color='blue')\n",
        "plt.xlabel('Hours Studied')\n",
        "plt.ylabel('Score')\n",
        "plt.title('Study Hours vs Exam Score')\n",
        "plt.show()\n",
        "\n",
        "# Step 3: Split into train and test data\n",
        "X = df[['Hours']]\n",
        "y = df['Scores']\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Step 4: Train the model\n",
        "model = LinearRegression()\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# Step 5: Make predictions\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Show predictions vs actual\n",
        "print(\"Actual:\", list(y_test.values))\n",
        "print(\"Predicted:\", list(y_pred))\n",
        "\n",
        "# Step 6: Predict for 5 hours of study\n",
        "hours = 5\n",
        "predicted_score = model.predict([[hours]])\n",
        "print(f\"If a student studies {hours} hours, the predicted score is: {predicted_score[0]:.2f}\")"
      ]
    }
  ]
}